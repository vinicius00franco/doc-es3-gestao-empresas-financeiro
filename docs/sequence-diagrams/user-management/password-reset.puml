@startuml
' Título do Diagrama
title Fluxo de Recuperação de Senha

' Configurações de Aparência para um visual mais limpo e moderno
!theme vibrant
skinparam sequence {
    ArrowColor #555555
    ActorBorderColor #555555
    LifeLineBorderColor #555555
    ParticipantBorderColor #555555
    BoxBorderColor #555555
    
    ParticipantBackgroundColor #F8F8F8
    ActorBackgroundColor #EFEFEF
    ParticipantFontColor #000000
    ActorFontColor #000000
    NoteFontColor #000000
    FontColor #000000
}
skinparam roundcorner 10
skinparam shadowing false
skinparam defaultFontColor #000000
autonumber

' Declaração dos Participantes com cores distintas para fácil identificação
actor "Usuário" as User
participant "App\n(React Native)" as App #DDFFDD
participant "API\n(Django REST)" as API #DDEEFF
participant "Serviço\nde Email" as Email #FFFFDD
participant "Banco de Dados" as DB #FFEECC

== Solicitação de Reset ==

User -> App: Clica em "Esqueci minha senha"
activate App #lightgreen
App --> User: Exibe tela para inserir e-mail
User -> App: Informa e-mail

App -> API: POST /api/password-reset/ (e-mail)
activate API #lightblue

API -> DB: Verifica se e-mail existe
activate DB #lightyellow
DB --> API: Resultado da consulta
deactivate DB

' Bloco Alternativo: E-mail Encontrado vs. Não Encontrado
alt #E6FFE6 E-mail Encontrado

    API -> API: Gera token de recuperação
    note right of API
        **Token de Recuperação:**
        - Expira em 1 hora
        - Único uso
        - Criptograficamente seguro
    end note
    
    API -> DB: Salva token com expiração
    activate DB #lightyellow
    DB --> API: Token salvo
    deactivate DB
    
    API -> Email: Envia e-mail com link de recuperação
    activate Email #lightyellow
    Email --> API: E-mail enviado
    deactivate Email
    
    API --> App: Retorna sucesso (200 OK)
    deactivate API
    App --> User: Exibe mensagem de e-mail enviado
    deactivate App

else #FFF0E6 E-mail Não Encontrado

    API --> App: Retorna sucesso (200 OK) - Por segurança
    deactivate API
    App --> User: Exibe mesma mensagem
    note left of App
        Por segurança, não revelamos
        se o e-mail existe ou não
    end note
    deactivate App

end

== Redefinição de Senha ==

User -> User: Acessa e-mail e clica no link
User -> App: Abre app com token de recuperação
activate App #lightgreen

App -> API: GET /api/password-reset/validate/ (token)
activate API #lightblue

API -> DB: Verifica validade do token
activate DB #lightyellow
DB --> API: Status do token
deactivate DB

' Bloco Alternativo: Token Válido vs. Inválido
alt #E6FFE6 Token Válido

    API --> App: Permite redefinição (200 OK)
    deactivate API
    App --> User: Exibe tela de nova senha
    User -> App: Informa nova senha
    
    App -> API: POST /api/password-reset/confirm/\n(token, nova senha)
    activate API #lightblue
    API -> DB: Atualiza senha e invalida token
    activate DB #lightyellow
    DB --> API: Senha atualizada
    deactivate DB
    
    API --> App: Confirmação (200 OK)
    deactivate API
    App --> User: Redireciona para login
    note left of App
        Senha alterada com sucesso!
        Faça login com a nova senha
    end note
    deactivate App

else #FFE6E6 Token Inválido/Expirado

    API --> App: Erro de token (400 Bad Request)
    deactivate API
    App --> User: Exibe erro e redireciona
    note left of App
        Token expirado ou inválido.
        Solicite um novo reset de senha
    end note
    deactivate App

end

@enduml