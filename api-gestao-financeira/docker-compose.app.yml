name: gestao-stack

services:
  app:
    build: .
    container_name: django_app
    env_file:
      - .env
    command: daphne -b 0.0.0.0 -p 8000 core.asgi:application
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on: []  # Banco est√° em outro compose; garantir rede criada antes
    networks:
      - production-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis_broker
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - production-network
    restart: unless-stopped

  celery_worker:
    build: .
    container_name: celery_worker
    env_file:
      - .env
    command: celery -A core.celery app worker -l info --concurrency=2
    depends_on:
      - redis
    networks:
      - production-network
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - app
    networks:
      - production-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus_monitor
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - production-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:10.1.0
    container_name: grafana_dashboard
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - production-network
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:

networks:
  production-network:
    external: true