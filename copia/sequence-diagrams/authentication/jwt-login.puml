@startuml
' Título do Diagrama
title Fluxo de Autenticação de Usuário (JWT)

' Configurações de Aparência para um visual mais limpo e moderno
!theme vibrant
skinparam sequence {
    ArrowColor #555555
    ActorBorderColor #555555
    LifeLineBorderColor #555555
    ParticipantBorderColor #555555
    BoxBorderColor #555555
    
    ParticipantBackgroundColor #F8F8F8
    ActorBackgroundColor #EFEFEF
    ParticipantFontColor #000000
    ActorFontColor #000000
    NoteFontColor #000000
    FontColor #000000
}
skinparam roundcorner 10
skinparam shadowing false
skinparam defaultFontColor #000000
autonumber

' Declaração dos Participantes com cores distintas para fácil identificação
actor "Usuário" as User
participant "App\n(React Native)" as App #DDFFDD
participant "API\n(Django REST)" as API #DDEEFF
participant "Banco de Dados" as DB #FFEECC

' Início do Fluxo
User -> App: Informa e-mail e senha na tela de login
activate App #lightgreen

App -> API: POST /api/token/\n(e-mail, senha)
activate API #lightblue

== Verificação no Servidor ==

API -> DB: Busca usuário e verifica a senha (hash)
activate DB #lightyellow
DB --> API: Resultado da verificação
deactivate DB

' Bloco Alternativo: Sucesso vs. Falha com cores para clareza visual
alt #E6FFE6 Credenciais Válidas

    API -> API: Gera Access Token e Refresh Token (JWT)
    note right of API
        **Access Token:** Usado para acessar recursos protegidos. Curta duração.
        **Refresh Token:** Usado para obter um novo Access Token. Longa duração.
    end note
    
    API --> App: Retorna tokens (200 OK)
    deactivate API

    App -> App: Armazena os tokens de forma segura
    note left of App
        Ex: Keychain (iOS) / Keystore (Android)
        para armazenamento seguro e persistente.
    end note
    
    App --> User: Redireciona para a tela principal
    deactivate App

else #FFE6E6 Credenciais Inválidas

    API --> App: Retorna erro (401 Unauthorized)
    deactivate API
    
    App --> User: Exibe mensagem de erro
    deactivate App

end

@enduml